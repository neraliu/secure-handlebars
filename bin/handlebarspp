#!/usr/bin/env node
/* 
Copyright (c) 2015, Yahoo Inc. All rights reserved.
Copyrights licensed under the New BSD License.
See the accompanying LICENSE file for terms.

Authors: Nera Liu <neraliu@yahoo-inc.com>
         Albert Yu <albertyu@yahoo-inc.com>
         Adonis Fung <adon@yahoo-inc.com>
*/
/**
This utility parses the handlebars template file and adds the context-sensitive XSS helper markups
*/
(function() {

    var fs = require('fs'),
        ContextParserHandlebars = require("../src/context-parser-handlebars.js"),
        noOfArgs = process.argv.length, 
        file, partialsDir, extname;

    // TODO: update the README
    var argv = require('minimist')(process.argv.slice(2));
        
    if (argv['_'][0]) {
        file = argv['_'][0];
        partialsDir = argv['p'] !== undefined? (argv['p'].charAt(argv['p'].length-1) !== '/'? argv['p']+'/':argv['p']) : undefined;
        extname = argv['e'] !== undefined? (argv['e'].charAt(0) !== '.'? '.'+argv['e']:argv['e']) : undefined;
        if (partialsDir && !extname) {
            console.log("[ERROR] Handlebars file extension (.i.e -e option) is required if partials dir is set!");
            process.exit(1);
        }

        if (fs.existsSync(file)) {
            var template = fs.readFileSync(file, 'utf-8');
            var parser = new ContextParserHandlebars({
                printCharEnable: true,
                strictMode: argv['s'] === 'true',
                enablePartialCombine: argv['c'] === 'true',
            });

            // this function will read all the partials and cache into memory,
            // the partial parsing will be supported if the partial can be loaded from memory
            // otherwise this partial parsing will be disable by default.
            var p = parser.getPartials(partialsDir, extname);
            p.then(function() {
                parser.analyzeContext(template);
                process.exit(0);
            }).catch(function(err) {
                console.log("[ERROR] "+err);
                process.exit(1);
            });
        } else {
            console.log("[ERROR] "+file+" does not exist");
            process.exit(1);
        }
    } else {
        console.log("Usage: handlebarspp <Handlebars template file> -p <Handlebars partial dir> -e <Handlebars file extension> -s [strictMode true|false] -c [partialCombine true|false]");
        process.exit(1);
    }

}).call(this);
